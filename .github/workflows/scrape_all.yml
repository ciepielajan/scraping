name: gold_scrapper_kangur

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 12,17,22 * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out this repo
      uses: actions/checkout@v2
    - name: Fetch latest data
      run: |-
        URL='https://www.metalelokacyjne.pl/product-pol-9098-Australijski-Kangur-1-10-uncji-Zlota-2024.html' 
        links="https://www.metalelokacyjne.pl/product-pol-108-Sztabka-1-gram-Zlota-LBMA.html https://www.metalelokacyjne.pl/product-pol-1065-Sztabka-Valcambi-1-gram-Zlota-LBMA-Lamana.html https://www.metalelokacyjne.pl/product-pol-9098-Australijski-Kangur-1-10-uncji-Zlota-2024.html"

        for URL in $links
        do
          SELL_START='<strong class="projector_prices__price" id="projector_price_value">'
          SELL_END='</strong>'
          BUY_START='<strong class="projector_prices__srp" id="projector_price_srp">'
          BUY_END='</strong>'
          AVAILABLE_START='<button class="projector_buy__button btn --solid --large" id="projector_button_basket" type="submit">'
          AVAILABLE_END='</button>'
  
          raw_website=$(curl -l $URL)
          current_date=$(date +"%Y-%m-%d %H:%M")
          if [ -z "$raw_website" ]; then
            sell_price=""
            buy_price=""
            available="strona niedostępna"
          else
            sell_price=$(echo $raw_website | grep -oP "(?<=${SELL_START}).*?(?=${SELL_END})" | cut -d">" -f2 | cut -d"<" -f1 | tr -d " zł" | tr , .  || echo "error pattern"); [ "$sell_price" == "" ] && sell_price="brak na stronie"
            buy_price=$(echo $raw_website | grep -oP "(?<=${BUY_START}).*?(?=${BUY_END})" | cut -d">" -f2 | cut -d"<" -f1 | tr -d " zł" | tr , . || echo "error pattern"); [ "$buy_price" == "" ] && buy_price="brak na stronie"
            available=$(echo $raw_website | grep -oP "(?<=${AVAILABLE_START}).*?(?=${AVAILABLE_END})" || echo "nie dostępny")
          fi
          fn=$(echo $URL | cut -d"-" -f4- | cut -d"." -f1)
          echo $fn
          echo "${current_date},${sell_price},${buy_price},${available}" >> $fn.csv
        done
    - name: Commit and push if it changed
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git pull
        for URL in $links
        do
          fn=$(echo $URL | cut -d"-" -f4- | cut -d"." -f1)
          git add $fn.csv
        done
        timestamp=$(date -u +"%Y-%m-%d %H:%M:%S")
        git commit -m "Latest data: ${timestamp}" || exit 0
        git push
